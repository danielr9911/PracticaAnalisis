/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import static java.awt.image.ImageObserver.HEIGHT;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import practicaanalisis.Funcion;
import static practicaanalisis.Funcion.callFunction;
import practicaanalisis.Metodos;

/**
 *
 * @author pedrosalzedo
 */
public class Newton extends javax.swing.JFrame {
    private static java.text.DecimalFormat sf = new java.text.DecimalFormat("0.#E0");

    /**
     * Creates new form Newton
     */
    public Newton() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        iteracionesNewton = new javax.swing.JTextField();
        toleranciaNewton = new javax.swing.JTextField();
        xInicialNewton = new javax.swing.JTextField();
        errorABSNewton = new javax.swing.JRadioButton();
        errorRelNewton = new javax.swing.JRadioButton();
        botonRegresarNewton = new javax.swing.JButton();
        botonAyudaNewton = new javax.swing.JButton();
        calcularNewton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        iteracionesNewton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        iteracionesNewton.setSize(new java.awt.Dimension(300, 50));
        getContentPane().add(iteracionesNewton);
        iteracionesNewton.setBounds(380, 313, 400, 50);

        toleranciaNewton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        toleranciaNewton.setSize(new java.awt.Dimension(300, 50));
        getContentPane().add(toleranciaNewton);
        toleranciaNewton.setBounds(380, 410, 400, 50);

        xInicialNewton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        xInicialNewton.setSize(new java.awt.Dimension(300, 50));
        xInicialNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xInicialNewtonActionPerformed(evt);
            }
        });
        getContentPane().add(xInicialNewton);
        xInicialNewton.setBounds(380, 230, 400, 50);

        buttonGroup1.add(errorABSNewton);
        errorABSNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorABSNewtonActionPerformed(evt);
            }
        });
        getContentPane().add(errorABSNewton);
        errorABSNewton.setBounds(430, 520, 28, 23);

        buttonGroup1.add(errorRelNewton);
        errorRelNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorRelNewtonActionPerformed(evt);
            }
        });
        getContentPane().add(errorRelNewton);
        errorRelNewton.setBounds(810, 520, 28, 23);

        botonRegresarNewton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Boton Regresar.png"))); // NOI18N
        botonRegresarNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarNewtonActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegresarNewton);
        botonRegresarNewton.setBounds(160, 70, 80, 80);

        botonAyudaNewton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Boton Ayuda.png"))); // NOI18N
        botonAyudaNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAyudaNewtonActionPerformed(evt);
            }
        });
        getContentPane().add(botonAyudaNewton);
        botonAyudaNewton.setBounds(760, 60, 110, 110);

        calcularNewton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CalcularBoton.png"))); // NOI18N
        calcularNewton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularNewtonActionPerformed(evt);
            }
        });
        getContentPane().add(calcularNewton);
        calcularNewton.setBounds(550, 605, 310, 90);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonMisFunciones.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(160, 605, 310, 90);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Newton.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1024, 768);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegresarNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarNewtonActionPerformed
        // TODO add your handling code here:
        Abierto abiertos = new Abierto();
        abiertos.setVisible(true);
        abiertos.setSize(1024,768);
        abiertos.setResizable(false);
        abiertos.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_botonRegresarNewtonActionPerformed

    private void botonAyudaNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAyudaNewtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - Newton", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/Newton Ayuda.png")));
    }//GEN-LAST:event_botonAyudaNewtonActionPerformed

    private void errorABSNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorABSNewtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_errorABSNewtonActionPerformed

    private void errorRelNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorRelNewtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_errorRelNewtonActionPerformed

    private void calcularNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularNewtonActionPerformed
        // TODO add your handling code here:
        double xi = 0;
        double tol = 0;
        int iter = 0;
        boolean camposCorrectos = true;
        
        try{
            xi = Double.parseDouble(xInicialNewton.getText());
            tol = Double.parseDouble(toleranciaNewton.getText());
            iter = Integer.parseInt(iteracionesNewton.getText());
        }catch(Exception e){
            camposCorrectos = false;
        }
        
        if(iter <= 0 && tol <= 0){
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese información correcta a los campos, como un número mayor que cero para iteraciones y número mayor de cero para la tolerancia");
            camposCorrectos = false;
        }else if(iter <= 0){    
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione un número mayor que cero para iteraciones");
            camposCorrectos = false;
        } else if(tol <= 0){
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione un número mayor de cero para la tolerancia");
            camposCorrectos = false;
        } else{
            camposCorrectos = true;
        }
        
        errorABSNewton.setActionCommand("0");
        errorRelNewton.setActionCommand("1");
        int err = 0;
        try{
            err = Integer.parseInt(buttonGroup1.getSelection().getActionCommand());
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccionar el tipo de error para trabajar");
            camposCorrectos = false;
        }
        
        if (camposCorrectos){
            if(!"".equals(Funcion.f) && !"".equals(Funcion.df)){
                String mensaje = "";
                boolean correct = false;
                Double[][] data = null;
                double fxi = callFunction("f", xi);
                double dfxi = callFunction("df", xi);
                if (fxi == 0){
                    mensaje = xi + " es una raiz";
                }else if (dfxi == 0){
                    mensaje = xi + " es una posible raiz múltiple";
                }else if (iter <= 0){
                    mensaje = "El numero de iteraciones debe de ser mayor a cero";
                }else if(tol <= 0){
                    mensaje = "La tolerancia debe de ser mayor a cero";
                }else {
                    Metodos.newton(xi,iter, tol, err);
                    //Resultados
                    data = Metodos.data;
                    Object[][] newData = formatearData(data);
                    mensaje = Metodos.mens;

                    ResultadosNewton Rnewton = new ResultadosNewton(xi,iter,tol,newData,mensaje);
                    Rnewton.setVisible(true);
                    Rnewton.setSize(1024,768);
                    Rnewton.setResizable(false);
                    Rnewton.setLocationRelativeTo(null);
                    dispose();
                }
                if (!correct){
                    JOptionPane.showMessageDialog(rootPane, mensaje);
                }
            }else{
            JOptionPane.showMessageDialog(rootPane, "Por favor ingresar una función F(x) y F'(x) válida para ejecutar el método");
            }
        }
    }//GEN-LAST:event_calcularNewtonActionPerformed

    private void xInicialNewtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xInicialNewtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xInicialNewtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Funciones func = new Funciones("newton");
        func.setVisible(true);
        func.setSize(1024,768);
        func.setResizable(false);
        func.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void groupButton(){
        ButtonGroup bgroup = new ButtonGroup();
        
        bgroup.add(errorABSNewton);
        bgroup.add(errorRelNewton);
    }
    
    private Object[][] formatearData(Double[][] data) {
        Object[][] newData = new Object[data.length][];
        for(int i = 0; i < data.length; i++){
            newData[i] = new Object[5];
            newData[i][0] = data[i][0].intValue();
            newData[i][1] = data[i][1];
            newData[i][2] = sf.format(data[i][2]);
            newData[i][3] = sf.format(data[i][3]);
            newData[i][4] = sf.format(data[i][4]);
            
        }
        return newData;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAyudaNewton;
    private javax.swing.JButton botonRegresarNewton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calcularNewton;
    private javax.swing.JRadioButton errorABSNewton;
    private javax.swing.JRadioButton errorRelNewton;
    private javax.swing.JTextField iteracionesNewton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField toleranciaNewton;
    private javax.swing.JTextField xInicialNewton;
    // End of variables declaration//GEN-END:variables
}
