/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import static java.awt.image.ImageObserver.HEIGHT;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import practicaanalisis.Metodos2;

/**
 *
 * @author carlosruiz
 */
public class MetodosDirectos extends javax.swing.JFrame {

    public static String resultado;
    public static String matrizFinal;
    public static String etapas;
    public static String matrizL;
    public static String matrizU;
    
    /**
     * Creates new form MetodosDirectos
     */
    public MetodosDirectos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        regresarMetodosDirectos = new javax.swing.JButton();
        miMatriz = new javax.swing.JButton();
        calcularMetodosDirectos = new javax.swing.JButton();
        simple = new javax.swing.JRadioButton();
        pivoteoParcial = new javax.swing.JRadioButton();
        pivoteoTotal = new javax.swing.JRadioButton();
        crout = new javax.swing.JRadioButton();
        doolittle = new javax.swing.JRadioButton();
        cholesky = new javax.swing.JRadioButton();
        ayudaSimple = new javax.swing.JButton();
        ayudaPivoteoParcial = new javax.swing.JButton();
        ayudaPivoteoTotal = new javax.swing.JButton();
        ayudaCrout = new javax.swing.JButton();
        ayudaDoolittle = new javax.swing.JButton();
        ayudaCholesky = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        regresarMetodosDirectos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Boton Regresar.png"))); // NOI18N
        regresarMetodosDirectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarMetodosDirectosActionPerformed(evt);
            }
        });
        getContentPane().add(regresarMetodosDirectos);
        regresarMetodosDirectos.setBounds(50, 60, 80, 80);

        miMatriz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonMiMatriz.png"))); // NOI18N
        miMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMatrizActionPerformed(evt);
            }
        });
        getContentPane().add(miMatriz);
        miMatriz.setBounds(200, 640, 300, 90);

        calcularMetodosDirectos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonCalcularPequeno.png"))); // NOI18N
        calcularMetodosDirectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularMetodosDirectosActionPerformed(evt);
            }
        });
        getContentPane().add(calcularMetodosDirectos);
        calcularMetodosDirectos.setBounds(510, 640, 300, 90);

        buttonGroup1.add(simple);
        simple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpleActionPerformed(evt);
            }
        });
        getContentPane().add(simple);
        simple.setBounds(280, 285, 30, 23);

        buttonGroup1.add(pivoteoParcial);
        getContentPane().add(pivoteoParcial);
        pivoteoParcial.setBounds(620, 285, 28, 23);

        buttonGroup1.add(pivoteoTotal);
        getContentPane().add(pivoteoTotal);
        pivoteoTotal.setBounds(910, 285, 28, 23);

        buttonGroup1.add(crout);
        getContentPane().add(crout);
        crout.setBounds(270, 525, 28, 23);

        buttonGroup1.add(doolittle);
        getContentPane().add(doolittle);
        doolittle.setBounds(560, 525, 28, 23);

        buttonGroup1.add(cholesky);
        cholesky.setToolTipText("");
        getContentPane().add(cholesky);
        cholesky.setBounds(860, 525, 28, 23);

        ayudaSimple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonAyudaPequeno.png"))); // NOI18N
        ayudaSimple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaSimpleActionPerformed(evt);
            }
        });
        getContentPane().add(ayudaSimple);
        ayudaSimple.setBounds(130, 270, 50, 50);

        ayudaPivoteoParcial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonAyudaPequeno.png"))); // NOI18N
        ayudaPivoteoParcial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaPivoteoParcialActionPerformed(evt);
            }
        });
        getContentPane().add(ayudaPivoteoParcial);
        ayudaPivoteoParcial.setBounds(375, 270, 50, 50);

        ayudaPivoteoTotal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonAyudaPequeno.png"))); // NOI18N
        ayudaPivoteoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaPivoteoTotalActionPerformed(evt);
            }
        });
        getContentPane().add(ayudaPivoteoTotal);
        ayudaPivoteoTotal.setBounds(685, 270, 50, 50);

        ayudaCrout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonAyudaPequeno.png"))); // NOI18N
        ayudaCrout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaCroutActionPerformed(evt);
            }
        });
        getContentPane().add(ayudaCrout);
        ayudaCrout.setBounds(135, 505, 50, 50);

        ayudaDoolittle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonAyudaPequeno.png"))); // NOI18N
        ayudaDoolittle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaDoolittleActionPerformed(evt);
            }
        });
        getContentPane().add(ayudaDoolittle);
        ayudaDoolittle.setBounds(385, 505, 50, 50);

        ayudaCholesky.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonAyudaPequeno.png"))); // NOI18N
        ayudaCholesky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaCholeskyActionPerformed(evt);
            }
        });
        getContentPane().add(ayudaCholesky);
        ayudaCholesky.setBounds(690, 505, 50, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/MetodosDirectos.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1024, 768);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regresarMetodosDirectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarMetodosDirectosActionPerformed
        // TODO add your handling code here:
        SistemasEcuaciones se = new SistemasEcuaciones();
        se.setVisible(true);
        se.setSize(1024,768);
        se.setResizable(false);
        se.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_regresarMetodosDirectosActionPerformed

    private void calcularMetodosDirectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularMetodosDirectosActionPerformed
        // TODO add your handling code here:
        String tipoMetodo = null;
        simple.setActionCommand("0");
        pivoteoParcial.setActionCommand("1");
        pivoteoTotal.setActionCommand("2");
        crout.setActionCommand("3");
        doolittle.setActionCommand("4");
        cholesky.setActionCommand("5");
        // Caso 6 - No han seleccionado ningún método
        int metodo;
        
        try{
            metodo = Integer.parseInt(buttonGroup1.getSelection().getActionCommand());
        }catch(Exception e){
            metodo = 6;
        }
        
        if(Metodos2.tam > 0){
        switch(metodo){
            case 0:
                //Simple
                tipoMetodo = "directo";
                Metodos2.gaussianaSimple(Metodos2.a, Metodos2.b, Metodos2.tam);
                try {
                    String s = null;
                    
                    boolean error=false;
                    while ((s = Metodos2.stdError.readLine()) != null) {
                        JOptionPane.showMessageDialog(this,s,"Error",JOptionPane.ERROR_MESSAGE);
                        error=true;
                    } 
                    if(!error){
                        //Interpretar para obtener 3 cosas: matrizFinal(Pasar a Double[][]), Resultados de X(String) y etapas(String)
                        String output = "";
                        while ((s = Metodos2.stdOutput.readLine()) != null) {
                            System.out.println(s);
                            output = output + (s + "\n");
                        }

                        String[] arrOutput = output.split("!");
                        etapas = arrOutput[0];
                        matrizFinal = arrOutput[1];
                        resultado = arrOutput[2];
                        //System.out.println("SALIDA JAVA");
                        //System.out.println(etapas);
                        //System.out.println("--");
                        //System.out.println(matrizFinal);
                        //System.out.println("---");
                        //System.out.println(resultado);
                        //System.out.println("FIN SALIDA JAVA");
                        

                    }
                } catch (IOException ex) {
                    Logger.getLogger(MetodosDirectos.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                break;
            case 1:
                //Parcial
                tipoMetodo = "directo";
                Metodos2.pivoteoParcial(Metodos2.a, Metodos2.b, Metodos2.tam);
                try {
                    String s = null;
                    boolean error=false;
                    while ((s = Metodos2.stdError.readLine()) != null) {
                        JOptionPane.showMessageDialog(this,s,"Error",JOptionPane.ERROR_MESSAGE);
                        error=true;
                    } 
                    if(!error){
                        //Interpretar para obtener 3 cosas: matrizFinal(Pasar a Double[][]), Resultados de X(String) y etapas(String)
                        String output = "";
                        while ((s = Metodos2.stdOutput.readLine()) != null) {
                            System.out.println(s);
                            output = output + (s + "\n");
                        }

                        String[] arrOutput = output.split("!");
                        etapas = arrOutput[0];
                        matrizFinal = arrOutput[1];
                        resultado = arrOutput[2];
                        //System.out.println("SALIDA JAVA");
                        //System.out.println(etapas);
                        //System.out.println("--");
                        //System.out.println(matrizFinal);
                        //System.out.println("---");
                        //System.out.println(resultado);
                        //System.out.println("FIN SALIDA JAVA");


                    }
                } catch (IOException ex) {
                    Logger.getLogger(MetodosDirectos.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 2:
                //Total
                tipoMetodo = "directo";
                Metodos2.pivoteoTotal(Metodos2.a, Metodos2.b, Metodos2.tam);
                //System.out.println("SALI DEL python");
                try {
                    String s = null;
                    
                    boolean error=false;
                    while ((s = Metodos2.stdError.readLine()) != null) {
                        JOptionPane.showMessageDialog(this,s,"Error",JOptionPane.ERROR_MESSAGE);
                        error=true;
                    } 
                    if(!error){
                        //Interpretar para obtener 3 cosas: matrizFinal(Pasar a Double[][]), Resultados de X(String) y etapas(String)
                        String output = "";
                        while ((s = Metodos2.stdOutput.readLine()) != null) {
                            //System.out.println(s);
                            output = output + (s + "\n");
                        }

                        String[] arrOutput = output.split("!");
                        etapas = arrOutput[0];
                        matrizFinal = arrOutput[1];
                        resultado = arrOutput[2];
                        //System.out.println("SALIDA JAVA");
                        //System.out.println(etapas);
                        //System.out.println("--");
                        //System.out.println(matrizFinal);
                        //System.out.println("---");
                        //System.out.println(resultado);
                        //System.out.println("FIN SALIDA JAVA");
                        

                    }
                } catch (IOException ex) {
                    Logger.getLogger(MetodosDirectos.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 3:
                //Crout
                tipoMetodo = "factorizacion";
                Metodos2.crout(Metodos2.a, Metodos2.b, Metodos2.tam);
                //System.out.println("SALI DEL python");
                try {
                    String s = null;
                    
                    boolean error=false;
                    while ((s = Metodos2.stdError.readLine()) != null) {
                        JOptionPane.showMessageDialog(this,s,"Error",JOptionPane.ERROR_MESSAGE);
                        error=true;
                    } 
                    if(!error){
                        //Interpretar para obtener 3 cosas: matrizFinal(Pasar a Double[][]), Resultados de X(String) y etapas(String)
                        String output = "";
                        while ((s = Metodos2.stdOutput.readLine()) != null) {
                            //System.out.println(s);
                            output = output + (s + "\n");
                        }

                        String[] arrOutput = output.split("!");
                        etapas = arrOutput[0];
                        matrizL = arrOutput[1];
                        matrizU = arrOutput[2];
                        resultado = arrOutput[3];
                        //System.out.println("SALIDA JAVA");
                        //System.out.println(etapas);
                        //System.out.println("--");
                        //System.out.println(matrizFinal);
                        //System.out.println("---");
                        //System.out.println(resultado);
                        //System.out.println("FIN SALIDA JAVA");
                        

                    }
                } catch (IOException ex) {
                    Logger.getLogger(MetodosDirectos.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 4:
                //Doolittle
                tipoMetodo = "factorizacion";
                Metodos2.doolittle(Metodos2.a, Metodos2.b, Metodos2.tam);
                //System.out.println("SALI DEL python");
                try {
                    String s = null;
                    
                    boolean error=false;
                    while ((s = Metodos2.stdError.readLine()) != null) {
                        JOptionPane.showMessageDialog(this,s,"Error",JOptionPane.ERROR_MESSAGE);
                        error=true;
                    } 
                    if(!error){
                        //Interpretar para obtener 3 cosas: matrizFinal(Pasar a Double[][]), Resultados de X(String) y etapas(String)
                        String output = "";
                        while ((s = Metodos2.stdOutput.readLine()) != null) {
                            //System.out.println(s);
                            output = output + (s + "\n");
                        }

                        String[] arrOutput = output.split("!");
                        etapas = arrOutput[0];
                        matrizL = arrOutput[1];
                        matrizU = arrOutput[2];
                        resultado = arrOutput[3];
                        //System.out.println("SALIDA JAVA");
                        //System.out.println(etapas);
                        //System.out.println("--");
                        //System.out.println(matrizFinal);
                        //System.out.println("---");
                        //System.out.println(resultado);
                        //System.out.println("FIN SALIDA JAVA");
                        

                    }
                } catch (IOException ex) {
                    Logger.getLogger(MetodosDirectos.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 5:
                //Cholesky
                tipoMetodo = "factorizacion";
                Metodos2.cholesky(Metodos2.a, Metodos2.b, Metodos2.tam);
                //System.out.println("SALI DEL python");
                try {
                    String s = null;
                    
                    boolean error=false;
                    while ((s = Metodos2.stdError.readLine()) != null) {
                        JOptionPane.showMessageDialog(this,s,"Error",JOptionPane.ERROR_MESSAGE);
                        error=true;
                    } 
                    if(!error){
                        //Interpretar para obtener 3 cosas: matrizFinal(Pasar a Double[][]), Resultados de X(String) y etapas(String)
                        String output = "";
                        while ((s = Metodos2.stdOutput.readLine()) != null) {
                            //System.out.println(s);
                            output = output + (s + "\n");
                        }

                        String[] arrOutput = output.split("!");
                        etapas = arrOutput[0];
                        matrizL = arrOutput[1];
                        matrizU = arrOutput[2];
                        resultado = arrOutput[3];
                        //System.out.println("SALIDA JAVA");
                        //System.out.println(etapas);
                        //System.out.println("--");
                        //System.out.println(matrizFinal);
                        //System.out.println("---");
                        //System.out.println(resultado);
                        //System.out.println("FIN SALIDA JAVA");
                        

                    }
                } catch (IOException ex) {
                    Logger.getLogger(MetodosDirectos.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 6:
                JOptionPane.showMessageDialog(rootPane, "Por favor seleccione un método");
                break;
            default:                
                break;
                
                
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Por favor asigne valores a su matriz");
        }
        
        
        if("directo".equals(tipoMetodo)){
            ResultadosMetodosDirectos resultadosMetodosDirectos = new ResultadosMetodosDirectos(resultado, matrizFinal, etapas);
            resultadosMetodosDirectos.setVisible(true);
            resultadosMetodosDirectos.setSize(1024,768);
            resultadosMetodosDirectos.setResizable(false);
            resultadosMetodosDirectos.setLocationRelativeTo(null);
            dispose();
        }else if("factorizacion".equals(tipoMetodo)){
            ResultadosFactorizacionLU resultadosFactorizacionLU = new ResultadosFactorizacionLU();
            resultadosFactorizacionLU.setVisible(true);
            resultadosFactorizacionLU.setSize(1024,768);
            resultadosFactorizacionLU.setResizable(false);
            resultadosFactorizacionLU.setLocationRelativeTo(null);
            dispose();
        }
        
    }//GEN-LAST:event_calcularMetodosDirectosActionPerformed

    private void simpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_simpleActionPerformed

    private void miMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMatrizActionPerformed
        // TODO add your handling code here:
        MiMatriz miM = new MiMatriz();
        miM.setVisible(true);
        miM.setSize(1024,768);
        miM.setResizable(false);
        miM.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_miMatrizActionPerformed

    private void ayudaSimpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaSimpleActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - Simple", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/AyudaSimple.png")));
    }//GEN-LAST:event_ayudaSimpleActionPerformed

    private void ayudaPivoteoParcialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaPivoteoParcialActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - Pivoteo Parcial", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/AyudaPivoteoParcial.png")));
    }//GEN-LAST:event_ayudaPivoteoParcialActionPerformed

    private void ayudaPivoteoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaPivoteoTotalActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - Pivoteo Total", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/AyudaPivoteoTotal.png")));
    }//GEN-LAST:event_ayudaPivoteoTotalActionPerformed

    private void ayudaCroutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaCroutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - Crout", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/AyudaCrout.png")));
    }//GEN-LAST:event_ayudaCroutActionPerformed

    private void ayudaDoolittleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaDoolittleActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - Doolittle", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/AyudaDoolittle.png")));
    }//GEN-LAST:event_ayudaDoolittleActionPerformed

    private void ayudaCholeskyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaCholeskyActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - Cholesky", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/AyudaCholesky.png")));
    }//GEN-LAST:event_ayudaCholeskyActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ayudaCholesky;
    private javax.swing.JButton ayudaCrout;
    private javax.swing.JButton ayudaDoolittle;
    private javax.swing.JButton ayudaPivoteoParcial;
    private javax.swing.JButton ayudaPivoteoTotal;
    private javax.swing.JButton ayudaSimple;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calcularMetodosDirectos;
    private javax.swing.JRadioButton cholesky;
    private javax.swing.JRadioButton crout;
    private javax.swing.JRadioButton doolittle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton miMatriz;
    private javax.swing.JRadioButton pivoteoParcial;
    private javax.swing.JRadioButton pivoteoTotal;
    private javax.swing.JButton regresarMetodosDirectos;
    private javax.swing.JRadioButton simple;
    // End of variables declaration//GEN-END:variables
}
