/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import practicaanalisis.Funcion;
import practicaanalisis.Metodos;
import practicaanalisis.Metodos2;

/**
 *
 * @author carlosruiz
 */
public class Jacobi extends javax.swing.JFrame {

    private static java.text.DecimalFormat sf = new java.text.DecimalFormat("0.#E0"); 
    /**
     * Creates new form Jacobi
     */
    public Jacobi() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        iteracionesJacobi = new javax.swing.JTextField();
        toleranciaJacobi = new javax.swing.JTextField();
        regresarJacobi = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lamdaJacobi = new javax.swing.JTextField();
        errorAbsInfinito = new javax.swing.JRadioButton();
        errorRelativoInfinito = new javax.swing.JRadioButton();
        botonCalcular = new javax.swing.JButton();
        ayudaLamba = new javax.swing.JButton();
        ayudaJacobi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        errorAbsEuclidiana = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        errorRelativoEuclidiana = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        iteracionesJacobi.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        getContentPane().add(iteracionesJacobi);
        iteracionesJacobi.setBounds(360, 205, 510, 50);

        toleranciaJacobi.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        getContentPane().add(toleranciaJacobi);
        toleranciaJacobi.setBounds(360, 285, 510, 50);

        regresarJacobi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Boton Regresar.png"))); // NOI18N
        regresarJacobi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarJacobiActionPerformed(evt);
            }
        });
        getContentPane().add(regresarJacobi);
        regresarJacobi.setBounds(140, 70, 80, 80);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(174, 10, 5));
        jLabel2.setText("λ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(170, 350, 40, 40);

        lamdaJacobi.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        getContentPane().add(lamdaJacobi);
        lamdaJacobi.setBounds(360, 350, 510, 50);

        buttonGroup1.add(errorAbsInfinito);
        getContentPane().add(errorAbsInfinito);
        errorAbsInfinito.setBounds(160, 460, 30, 23);

        buttonGroup1.add(errorRelativoInfinito);
        getContentPane().add(errorRelativoInfinito);
        errorRelativoInfinito.setBounds(160, 495, 30, 23);

        botonCalcular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CalcularBoton.png"))); // NOI18N
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });
        getContentPane().add(botonCalcular);
        botonCalcular.setBounds(550, 560, 310, 90);

        ayudaLamba.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/BotonAyudaPequeno.png"))); // NOI18N
        ayudaLamba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaLambaActionPerformed(evt);
            }
        });
        getContentPane().add(ayudaLamba);
        ayudaLamba.setBounds(205, 345, 50, 50);

        ayudaJacobi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Boton Ayuda.png"))); // NOI18N
        ayudaJacobi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaJacobiActionPerformed(evt);
            }
        });
        getContentPane().add(ayudaJacobi);
        ayudaJacobi.setBounds(730, 50, 110, 110);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 22)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(174, 0, 5));
        jLabel4.setText("Error Relativo");
        jLabel4.setToolTipText("");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(590, 490, 170, 30);

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 22)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(174, 0, 5));
        jLabel5.setText("Error Absoluto");
        jLabel5.setToolTipText("");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(590, 450, 170, 30);

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 22)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(174, 0, 5));
        jLabel6.setText("Error Absoluto");
        jLabel6.setToolTipText("");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(190, 455, 170, 30);

        buttonGroup1.add(errorAbsEuclidiana);
        getContentPane().add(errorAbsEuclidiana);
        errorAbsEuclidiana.setBounds(560, 455, 28, 23);

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 22)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(174, 0, 5));
        jLabel7.setText("Error Relativo");
        jLabel7.setToolTipText("");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(190, 490, 170, 30);

        buttonGroup1.add(errorRelativoEuclidiana);
        errorRelativoEuclidiana.setToolTipText("");
        getContentPane().add(errorRelativoEuclidiana);
        errorRelativoEuclidiana.setBounds(560, 495, 28, 23);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Jacobi.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1024, 768);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ayudaJacobiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaJacobiActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - Jacobi", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/AyudaJacobi.png")));
    }//GEN-LAST:event_ayudaJacobiActionPerformed

    private void regresarJacobiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarJacobiActionPerformed
        // TODO add your handling code here:
        MetodosIterativos metodosIterativos = new MetodosIterativos();
        metodosIterativos.setVisible(true);
        metodosIterativos.setSize(1024,768);
        metodosIterativos.setResizable(false);
        metodosIterativos.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_regresarJacobiActionPerformed

    private void ayudaLambaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaLambaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, null, "AYUDA - λ", HEIGHT, new javax.swing.ImageIcon(getClass().getResource("/imagenes/AyudaLambda.png")));
    }//GEN-LAST:event_ayudaLambaActionPerformed

    private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed
        // TODO add your handlerrorAbsInfinito:
        double lambda = 0;
        double tol = 0;
        int iter = 0;
        boolean camposCorrectos = true;
        
        try{
            lambda = Double.parseDouble(lamdaJacobi.getText());
            tol = Double.parseDouble(toleranciaJacobi.getText());
            iter = Integer.parseInt(iteracionesJacobi.getText());
        }catch(Exception e){
            camposCorrectos = false;
        }
        
        if(iter <= 0 && tol <= 0 && (lambda < 0 || lambda > 2)){
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese información correcta a los campos, como un número mayor que cero para iteraciones y número mayor de cero para la tolerancia");
            camposCorrectos = false;
        }else if(iter <= 0){    
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione un número mayor que cero para iteraciones");
            camposCorrectos = false;
        } else if(tol <= 0){
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione un número mayor de cero para la tolerancia");
            camposCorrectos = false;
        }else if(lambda < 0 || lambda > 2){
            JOptionPane.showMessageDialog(rootPane, "Por favor ingrese un número mayor a 0 y menor a 2 para el valor de lambda");
            camposCorrectos = false; 
        }else{
            camposCorrectos = true;
        }
        
        errorAbsInfinito.setActionCommand("0");
        errorRelativoInfinito.setActionCommand("1");
        errorAbsEuclidiana.setActionCommand("2");
        errorRelativoEuclidiana.setActionCommand("3");
        int err = 0;
        try{
            err = Integer.parseInt(buttonGroup1.getSelection().getActionCommand());
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccionar el tipo de norma para trabajar y su respectivo error");
            camposCorrectos = false;
        }
        
        if (camposCorrectos){
            if(Metodos2.tam != 0){
                Metodos2.jacobiRelajado(Metodos2.a, Metodos2.b, Metodos2.tam, tol, iter, lambda, Metodos2.x, err);
                try {
                    String s = null;
                    
                    boolean error=false;
                    while ((s = Metodos2.stdError.readLine()) != null) {
                        JOptionPane.showMessageDialog(this,s,"Error",JOptionPane.ERROR_MESSAGE);
                        error=true;
                    } 
                    if(!error){
                        String output = "";
                        while ((s = Metodos2.stdOutput.readLine()) != null) {
                            //System.out.println(s);
                            output = output + (s + "\n");
                        }
                        //INTERPRETAR S
                        String[] arrOutput = output.split("!");
                        
                        String resultadoX = arrOutput[arrOutput.length-1];
                        Object [][] tabla = new Object[arrOutput.length-1][Metodos2.tam+2];
                        for (int i = 0; i < arrOutput.length-1; i++) {
                            String temp = arrOutput[i];
                            temp = temp.replaceAll("\n", " ");
                            temp = temp.replace("[", "");
                            temp = temp.replace("]", "");
                            temp = temp.replace(",", "");
                            temp = temp.replaceAll("\\s+"," ");
                            
                            temp = temp.replace(" ", "!");
                            if(temp.charAt(0) == '!'){
                                temp = temp.substring(1,temp.length());
                            }
                            if(temp.charAt(temp.length()-1) == '!'){
                                temp = temp.substring(0,temp.length()-1);
                            }
                            //temp = temp.substring(1,temp.length()-1);
                            String[] arrTemp = temp.split("!");
                            
                            
                            for (int j = 0; j < arrTemp.length; j++) {
                                if(j == 0){
                                    tabla[i][j] = arrTemp[j];
                                }else if(j == arrTemp.length-1){
                                    tabla[i][j] = sf.format(Double.parseDouble(arrTemp[j]));
                                }else{
                                    tabla[i][j] = Double.parseDouble(arrTemp[j]);
                                }
                            }
                            
                            
                            
                            
                            //String[] sFila = arrOutput[i].split("\n");
                            //Double[] fila = new Double[Metodos2.tam+2];
                            //System.out.println(Arrays.toString(sFila));
                            
                        }
                        ResultadoJacobi rj = new ResultadoJacobi(iter, tol, err, lambda, tabla, resultadoX);
                        rj.setVisible(true);
                        rj.setSize(1024,768);
                        rj.setResizable(false);
                        rj.setLocationRelativeTo(null);
                        dispose();
                    
                    }
                }catch (IOException ex) {
                    Logger.getLogger(Jacobi.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }else{
            JOptionPane.showMessageDialog(rootPane, "Por favor asigne valores a su matriz");
            }
        }
    }//GEN-LAST:event_botonCalcularActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ayudaJacobi;
    private javax.swing.JButton ayudaLamba;
    private javax.swing.JButton botonCalcular;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton errorAbsEuclidiana;
    private javax.swing.JRadioButton errorAbsInfinito;
    private javax.swing.JRadioButton errorRelativoEuclidiana;
    private javax.swing.JRadioButton errorRelativoInfinito;
    private javax.swing.JTextField iteracionesJacobi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField lamdaJacobi;
    private javax.swing.JButton regresarJacobi;
    private javax.swing.JTextField toleranciaJacobi;
    // End of variables declaration//GEN-END:variables
}
